##
# CAS Server Context Configuration
#
server.context-path=/cas
server.port=8090

server.ssl.enabled=false
server.ssl.key-store=file:/etc/cas/thekeystore
server.ssl.key-store-password=changeit
server.ssl.key-password=changeit

server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.include-stacktrace=ALWAYS

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.min-spare-threads=10
server.tomcat.max-threads=200
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false

# Indicates that systemPropertiesOverride can be used.
# Set to false to prevent users from changing the default accidentally. Default true.
spring.cloud.config.allow-override=true

# External properties should override system properties.
spring.cloud.config.override-system-properties=false

# When allowOverride is true, external properties should take lowest priority, and not override any
# existing property sources (including local config files).
spring.cloud.config.override-none=false

# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

# Control the security of the management/actuator endpoints
# The 'enabled' flag below here controls the rendering of details for the health endpoint amongst other things.
management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

# Define a CAS-specific "WARN" status code and its order
management.health.status.order=WARN, DOWN, OUT_OF_SERVICE, UNKNOWN, UP

# Control the security of the management/actuator endpoints
# With basic authentication, assuming Spring Security and/or relevant modules are on the classpath.
security.basic.authorize-mode=role
security.basic.path=/cas/status/**
# security.basic.enabled=true
# security.user.name=casuser
# security.user.password=

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.template-resolver-order=100
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

##
# CAS Metrics Configuration
#
cas.metrics.refreshInterval=3600

##
# CAS Authentication Credentials
#
cas.authn.accept.users=casuser::Mellon
#cas.tgc.secure=false
#cas.serviceRegistry.initFromJson=true

##
# CAS Jdbc Configuration
#
cas.authn.jdbc.query[0].driverClass=com.mysql.jdbc.Driver
cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.MySQLDialect
cas.authn.jdbc.query[0].url=${jdbc.url}
cas.authn.jdbc.query[0].user=${jdbc.user}
cas.authn.jdbc.query[0].password=${jdbc.password}
cas.authn.jdbc.query[0].sql=SELECT * FROM sys_user WHERE username = ?
cas.authn.jdbc.query[0].fieldPassword=password
cas.authn.jdbc.query[0].fieldExpired=expired
cas.authn.jdbc.query[0].fieldDisabled=disabled

##
# CAS Password Management JDBC Configuration
#
cas.authn.pm.enabled=true
cas.authn.pm.jdbc.driverClass=com.mysql.jdbc.Driver
cas.authn.pm.jdbc.dialect=org.hibernate.dialect.MySQLDialect
cas.authn.pm.jdbc.url=${jdbc.url}
cas.authn.pm.jdbc.user=${jdbc.user}
cas.authn.pm.jdbc.password=${jdbc.password}
#cas.authn.pm.jdbc.sqlSecurityQuestions=SELECT t2.question,t2.answer FROM cas_user_base t1,cas_userpsd_question t2 WHERE t1.id=t2.user_id AND t1.user_name=?
#cas.authn.pm.jdbc.sqlFindEmail=SELECT t1.user_email FROM cas_user_base t1 WHERE t1.user_name=?
cas.authn.pm.jdbc.sqlChangePassword=UPDATE sys_user SET password=? WHERE username= ?
cas.authn.pm.jdbc.healthQuery=SELECT 1
cas.authn.pm.jdbc.isolateInternalQueries=false
#cas.authn.pm.jdbc.failFastTimeout=1
#cas.authn.pm.jdbc.isolationLevelName=ISOLATION_READ_COMMITTED
#cas.authn.pm.jdbc.leakThreshold=10
#cas.authn.pm.jdbc.batchSize=1
#cas.authn.pm.jdbc.ddlAuto=create-drop
cas.authn.pm.jdbc.autocommit=true
#cas.authn.pm.jdbc.idleTimeout=5000
#cas.authn.pm.jdbc.dataSourceName=
#cas.authn.pm.jdbc.dataSourceProxy=false
#cas.authn.pm.jdbc.properties.propertyName=propertyValue

#spring.mail.host=smtp.163.com
#spring.mail.port=25
#spring.mail.username=chenshiming0802@163.com
#spring.mail.password=xxxxxxx  #请输入发送邮件的密码
#spring.mail.testConnection=true
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true

# Minimum 8 and Maximum 10 characters at least 1 Uppercase Alphabet, 1 Lowercase Alphabet, 1 Number and 1 Special Character
#cas.authn.pm.policyPattern=^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,10}

#cas.authn.pm.reset.text=Reset your password with this link: %s
#cas.authn.pm.reset.subject=Password Reset Request
#cas.authn.pm.reset.from=chenshiming0802@163.com
#cas.authn.pm.reset.expirationMinutes=1
#cas.authn.pm.reset.emailAttribute=mail
#cas.authn.pm.reset.securityQuestionsEnabled=true

# Automatically log in after successful password change
#cas.authn.pm.autoLogin=false

# Used to sign/encrypt the password-reset link
#cas.authn.pm.reset.crypto.encryption.key=
##cas.authn.pm.reset.crypto.signing.key=
##cas.authn.pm.reset.crypto.enabled=true
##
# CAS ServiceRegistry Configuration
#
#开启识别json文件，默认false
cas.serviceRegistry.initFromJson=true
#资源加载路径
cas.serviceRegistry.json.location=classpath:/services
#自动扫描服务配置，默认开启
#cas.serviceRegistry.watcherEnabled=true
#120秒扫描一遍
#cas.serviceRegistry.repeatInterval=120000
#延迟15秒开启
#cas.serviceRegistry.startDelay=15000
#cas.serviceRegistry.managementType=DEFAULT